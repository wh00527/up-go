//
// Base styles
//

.btn {
  font-size:13px;
  color:$grey-text;
  background-color:#fff;
  border:1px solid $grey-seperator;
  text-transform: uppercase;
  line-height:1;
  border-radius:5px;
  font-weight:600;
  min-width:auto;
  padding: 6px 12px;
  min-height: 40px;
  text-transform:uppercase;
  box-shadow:none;
  // @include media-breakpoint-up(md) {
  //   margin-top:15px;
  // } 
  
  &:hover {     
    transition: .5s;
    background-color: darken($body-bg, 5%);
    border-color: darken($grey-seperator,5%);
  }

  &.focus {
    text-decoration: none;
    background-color: darken(#ffffff, 5%);
    outline:none;
  }

  &:active,
  &.active {
    background-image: none;
    outline: 0;
    @include box-shadow(inset 0 3px 5px rgba(0,0,0,.125));
  }

  &.disabled,
  &:disabled {
    cursor: $cursor-disabled;
    opacity: 1;
    box-shadow: none;
    background-color: $grey-bg;
    color:$grey-disable-text;
    border-color:$grey-bg;
    pointer-events: none;
    &:hover {
      cursor: $cursor-disabled;
      opacity: 1;
      box-shadow: none;
      background-color: $grey-bg !important;
      color:$grey-disable-text;
      border-color:$grey-bg !important;
      }
  }
}

// Future-proof disabling of clicks on `<a>` elements
a.btn.disabled,
fieldset[disabled] a.btn {
  pointer-events: none;
}

//ew-overwrite

.modal-close {
  @include modal-close;
}




//
// Alternate buttons
//

.btn-primary {
  @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
  width: 100%;

  // min-width: $btn-min-width;  // lets' review this !
}

.btn-secondary {
  @include button-variant($btn-secondary-color, $btn-secondary-bg, $btn-secondary-border);

  // min-width: $btn-min-width;  // lets' review this !
}

.btn-info {
  @include button-variant(#fff, $state-info-text, $state-info-text);
}

.btn-success {
  @include button-variant(#fff, $state-success-text, $state-success-text);
}

.btn-warning {
  @include button-variant(#fff, $state-warning-text, $state-warning-text);
}

.btn-danger {
  @include button-variant(#fff, $state-danger-text, $state-danger-text);
}


// Remove all backgrounds
.btn-primary-outline {
  @include button-outline-variant(#fff,$btn-primary-bg);
  min-width: $btn-min-width;
}
.btn-secondary-outline {
  @include button-outline-variant(#fff,$btn-secondary-border);
}
.btn-info-outline {
  @include button-outline-variant(#fff, $state-info-text);
}
.btn-success-outline {
  @include button-outline-variant(#fff, $state-success-text);
}
.btn-warning-outline {
  @include button-outline-variant(#fff, $state-warning-text);
}
.btn-danger-outline {
  @include button-outline-variant(#fff, $state-danger-text);
}


//
// Link buttons
//

// Make a button look and behave like a link
.btn-link {
  font-weight: normal;
  color: $link-color;
  border-radius: 0;

  &,
  &:active,
  &.active,
  &:disabled {
    background-color: transparent;
    @include box-shadow(none);
  }
  &,
  &:focus,
  &:active {
    border-color: transparent;
  }
  @include hover {
    border-color: transparent;
  }
  @include hover-focus {
    color: $link-hover-color;
    text-decoration: $link-hover-decoration;
    background-color: transparent;
  }
  &:disabled {
    @include hover-focus {
      color: $btn-link-disabled-color;
      text-decoration: none;
    }
  }
}


//
// Button Sizes
//

.btn-lg {
  // line-height: ensure even-numbered height of button next to large input
  @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $line-height-lg, $btn-border-radius-lg);
}
.btn-sm {
  // line-height: ensure proper height of button next to small input
  @include button-size($btn-padding-y-sm, $btn-padding-x-sm, $font-size-sm, $line-height-sm, $btn-border-radius-sm);
}


//
// Block button
//

.btn-block {
  display: block;
  width: 100%;
}

// Vertically space out multiple block buttons
.btn-block + .btn-block {
  margin-top: 5px;
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
  &.btn-block {
    width: 100%;
  }
}
